name: Branch cleanup dry-run weekly

on:
  schedule:
    - cron: '0 6 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  dry-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Run cleanup dry-run
        id: run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          python scripts/cleanup_closed_pr_branches.py --with-stale --behind 10 --days 7 > out.txt || true
          echo "OUTPUT<<EOF" >> $GITHUB_OUTPUT
          cat out.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          CAND=$(grep -E '^Candidates: ' out.txt | awk '{print $2}' || true)
          echo "candidates=${CAND:-0}" >> $GITHUB_OUTPUT
      - name: Create or update issue when candidates found
        if: steps.run.outputs.candidates != '0'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Automated: Branch cleanup candidates (dry-run)';
            const body = `Weekly dry-run found candidate branches.\n\nOutput:\n\n\`\`\`\n${{ steps.run.outputs.OUTPUT }}\n\`\`\`\n\nComment: '@Cursor run script with -s --execute then close this issue' to execute deletion including stale branches.`;
            const { data } = await github.search.issuesAndPullRequests({
              q: `repo:${context.repo.owner}/${context.repo.repo} is:issue is:open in:title "${title}"`
            });
            if (data.total_count > 0) {
              const issue = data.items[0];
              await github.issues.update({ owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number, body });
            } else {
              await github.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body });
            }

