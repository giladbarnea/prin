name: Branch cleanup dry-run weekly

on:
  schedule:
    - cron: '0 6 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  dry-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Run cleanup dry-run
        id: run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -o pipefail
          uv run --with=requests python3 scripts/cleanup_closed_pr_branches.py --with-stale --behind 10 --days 7 > out.txt || exit_code=$?
          echo "exit_code=${exit_code:-0}" >> $GITHUB_OUTPUT
          echo "OUTPUT<<EOF" >> $GITHUB_OUTPUT
          cat out.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create or update issue when candidates found
        if: steps.run.outputs.exit_code == '10'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Automated: Branch cleanup candidates (dry-run)';
            const body = `Weekly dry-run found candidate branches.\n\nOutput:\n\n\`\`\`\n${{ steps.run.outputs.OUTPUT }}\n\`\`\`\n\nComment: '@Cursor run script with -s --execute then close this issue' to execute deletion including stale branches.`;
            const { data } = await github.rest.search.issuesAndPullRequests({
              q: `repo:${context.repo.owner}/${context.repo.repo} is:issue is:open in:title "${title}"`
            });
            const issue = (data && Array.isArray(data.items) && data.items.length > 0) ? data.items[0] : null;
            if (issue) {
              await github.rest.issues.update({ owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number, body });
            } else {
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body });
            }

